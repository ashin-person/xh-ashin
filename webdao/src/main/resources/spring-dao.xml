<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:mvc="http://www.springframework.org/schema/mvc"

        xsi:schemaLocation="

	  http://www.springframework.org/schema/beans
	  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd

	  http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd

	  http://www.springframework.org/schema/aop
	  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd

	  http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd

      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd

      ">

    <context:component-scan base-package="com.ashin.dao.*,com.ashin.dao.system"/>

    <!-- 读入配置属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!-- proxy-target-class默认"false",更改为"ture"使用CGLib动态代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true" />

    <import resource="classpath:spring-mybatis.xml" />

    <!-- &lt;!&ndash; 配置c3p0连接池,目的：管理数据库连接 &ndash;&gt;
     <bean id="comboPooledDataSourceID" class="com.mchange.v2.c3p0.ComboPooledDataSource">
         <property name="driverClass" value="com.mysql.jdbc.Driver"/>
         <property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/ashintestdb"/>
         <property name="user" value="root"/>
         <property name="password" value="root"/>
     </bean>



     &lt;!&ndash; 配置sqlSessionFactoryBean,目的：加载mybatis.xml文件和映射文件，即替代原来Mybatis工具类的作用 &ndash;&gt;
 &lt;!&ndash;    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
         <property name="configLocation" value="classpath:mybatis.xml"/>
         <property name="dataSource" ref="comboPooledDataSourceID"/>
     </bean>&ndash;&gt;


     &lt;!&ndash; spring和MyBatis完美整合，不需要mybatis的配置映射文件 &ndash;&gt;
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
         <property name="dataSource" ref="comboPooledDataSourceID" />
         &lt;!&ndash; 自动扫描mapping.xml文件 &ndash;&gt;
         <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
         &lt;!&ndash; 自动扫描别名 &ndash;&gt;
         <property name="typeAliasesPackage" value="ljx.ashin.bean"/>
     </bean>

     &lt;!&ndash; DAO接口所在包名，Spring会自动查找其下的类 &ndash;&gt;
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         <property name="basePackage" value="ljx.ashin.dao,ljx.ashin.dao.*" />
         <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
     </bean>

     &lt;!&ndash; 配置Mybatis的事务管理器，即因为Mybatis底层用的是JDBC事务管事器，所以在这里依然配置JDBC事务管理器 &ndash;&gt;
     <bean id="dataSourceTransactionManagerID" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
         <property name="dataSource" ref="comboPooledDataSourceID"/>
     </bean>

     &lt;!&ndash; 配置通知,即让哪些方法需要事务支持 &ndash;&gt;
     <tx:advice id="tx" transaction-manager="dataSourceTransactionManagerID">
         <tx:attributes>
             <tx:method name="*" propagation="REQUIRED"/>
         </tx:attributes>
     </tx:advice>

     &lt;!&ndash; 配置事务切面，即让哪些包下的类需要事务 &ndash;&gt;
     <aop:config>
         <aop:pointcut expression="execution(* ljx.ashin.service.impl.*.*(..))" id="pointcut"/>
         <aop:advisor advice-ref="tx" pointcut-ref="pointcut"/>
     </aop:config>-->
</beans>